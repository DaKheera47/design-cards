---
import { Button, buttonVariants } from "@/components/ui/button";
import { getCollection } from "astro:content";
import FlippyCard from "../../components/FlippyCard.tsx";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const cards = await getCollection("flippableCards");
  return cards.map((entry) => ({
    params: { title: entry.data.title },
    props: { entry },
  }));
}

const { entry } = Astro.props;
---

<Layout title=`${entry.data.title} Card`>
  <section class="py-12">
    <FlippyCard
      client:load
      {...entry.data}
    />
  </section>
</Layout>

<style is:global>
  /* entire container, keeps perspective */
  .flip-container {
    perspective: 1000px;
  }
  /* flip the pane when hovered */
  /* .flip-container:hover .flipper,
  .flip-container.hover .flipper {
    transform: rotateY(180deg);
  } */

  .flip-container.flip .flipper {
    transform: rotateY(180deg);
  }

  .flip-container,
  .front,
  .back {
    width: 420px;
    height: 580px;
  }

  /* flip speed goes here */
  .flipper {
    transition: 0.6s;
    transform-style: preserve-3d;
    position: relative;
  }

  /* hide back of pane during swap */
  .front,
  .back {
    backface-visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* front pane, placed above back */
  .front {
    z-index: 2;
    /* for firefox 31 */
    transform: rotateY(0deg);
  }

  /* back, initially hidden pane */
  .back {
    transform: rotateY(180deg);
  }
</style>
