---
import { buttonVariants } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Session, SessionEvent, db, eq } from "astro:db";
import dayjs from "dayjs";
import Layout from "../../layouts/Layout.astro";

// get the sessionId from the url
const { session_id } = Astro.params;

// get all the associated SessionEvents of this event
const sessionEvents = await db
  .select()
  .from(SessionEvent)
  // @ts-ignore -- TS doesn't like eq coming from Astro
  .where(eq(SessionEvent.session_id, session_id));

const sessionEventsJson = JSON.stringify(sessionEvents);

// get the session details
let sessionDb = await db
  .select()
  .from(Session)
  // @ts-ignore -- TS doesn't like eq coming from Astro
  .where(eq(Session.id, session_id ?? ""))
  .limit(1);

// @ts-ignore -- TS doesn't like the fact that we're assuming the session exists
const session = sessionDb[0];
session.sessionIdentifier = parseInt(session.device_identifier.split(".")[0]);

const timeStarted = dayjs(session.timeStarted);
---

<Layout
  title='Session'
  dark
>
  <section class='max-h-screen py-8'>
    <div>
      <a
        href='/sessions'
        class={buttonVariants({ variant: "link" })}
      >
        Home
      </a>

      <h1 class='mb-6 text-balance text-center text-2xl capitalize'>
        {timeStarted.format("MMMM D")} Session{" "}
        {session.sessionIdentifier}, Device{" "}
        {session.device_identifier.split(".")[1]}
      </h1>
    </div>

    <div class='mb-8'>
      <button
        data-json={sessionEventsJson}
        data-session-id={session_id}
        id='download'
        class:list={[buttonVariants({ variant: "default" }), "mb-10 w-full"]}
      >
        Download Data for {timeStarted.format("MMMM D")} Session{" "}
        {session.sessionIdentifier}, Device{" "}
        {session.device_identifier.split(".")[1]}
      </button>
    </div>

    <div class='grid grid-cols-1 gap-4'>
      {
        sessionEvents.map((sessionEvent) => {
          return (
            <Card>
              <CardHeader>
                <CardTitle>{sessionEvent.card_title}</CardTitle>
              </CardHeader>

              <CardContent>
                <div class='card-content space-y-4'>
                  <div class='flex space-x-6'>
                    <p class='text-sm'>
                      Time Front: {sessionEvent.time_spent_front} seconds
                    </p>
                    <p class='text-sm'>
                      Time Back: {sessionEvent.time_spent_back} seconds
                    </p>
                  </div>
                  <p class='text-sm'>
                    Session Time:{" "}
                    {dayjs(sessionEvent.starting_timestamp).format("H:mm:ss")}
                    {" -> "}
                    {dayjs(sessionEvent.submission_timestamp).format("H:mm:ss")}
                  </p>
                  <p class='text-sm'>
                    Number of Flips: {sessionEvent.num_flips}
                  </p>
                  <p class='text-sm'>
                    Flips Data Length:{" "}
                    {Array.isArray(sessionEvent.flips)
                      ? sessionEvent.flips.length
                      : "Unknown"}
                  </p>
                  <p class='text-sm'>
                    Mouse Position Data Length:{" "}
                    {Array.isArray(sessionEvent.mouse_pos)
                      ? sessionEvent.mouse_pos.length
                      : "Unknown"}
                  </p>
                  <p class='text-sm'>
                    Chosen Answer: {sessionEvent.chosen_answer}
                  </p>
                  <p class='text-sm'>Card Index: {sessionEvent.card_idx}</p>
                </div>
              </CardContent>
            </Card>
          );
        })
      }
    </div>
  </section>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const button = document.querySelector("#download");
    if (!button) return;

    const downloadJson = () => {
      const data = button.getAttribute("data-json");
      const session_id = button.getAttribute("data-session-id");

      if (!data) return;

      const json = JSON.parse(JSON.stringify(data, null, 4));

      const blob = new Blob([json], { type: "application/json" });
      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = `session-${session_id}.json`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    };

    button.addEventListener("click", downloadJson);
  });
</script>
